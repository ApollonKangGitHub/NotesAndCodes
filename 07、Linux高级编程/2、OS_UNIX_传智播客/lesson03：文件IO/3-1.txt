1、缓冲区：
每一个FILE文件流都对应一个缓冲区，默认大小为8192Byte。‘\n’是自动刷新终端文件的方式，而普通文件不会在遇到‘\n’时刷新的。普通文件则可在①缓冲区写满②程序fflush()调用③文件读写结束，等的方式来刷新缓冲区，写入文件。
网络编程则一般不要缓冲区，因为网络通信一般要求同步更新。

write的应用层无缓冲区，但是内核层有缓冲区(该缓冲区是属于sys_write的，所以准确来说write其实还是无缓冲区的)。
write-->sys_buffer-->sys_write-->文件

注意：write每写一次到sys_buffer中就返回成功，但是我们知道sys_buffer并还没有刷新到文件中。所以write的写成功并不见得。
并且，标准库的buffer不同程序不能共享，而sys_buffer不同程序可以共享，也就是说即使A进程写完后sys_buffer并没有刷新到文件F。但是B进程在读文件F时，就先读到了sys_buffer中，文件F的未写入的缓冲。故AB共享sys_buffer。
----------------------------------------------------------------
2、PCB(进程控制块)：

tsk_struct结构体(进程表)：
/usr/src/linux-headers-***/include/linux/sched.h
linux-headers-***表示版本号不尽相同(Tab即可)
file_struct结构体(文件表)：
存储文件描述符。
---------------------------------------------------------------
O_CREAT和O_TRUNC：文件存在则清空文件
O_CREAT和O_EXCL：文件错在则出错返回

mode_t umask(mode_t mask);

eg:
mode_t old = umask(0);
open("txt", O_CREAT|O_RDWR, 0777);
umask(old);//程序中可不设回默认值，因为修改只在程序中起效。但是为了服务器的开发(基本不会宕机)，umask(old)、free(p)、delete、close(fd)之类的操作也是必须要的.

ulimit -a:查看文件描述符最大值(每个进程最多打开文件个数)
cat /proc/sys/fs/file-max:查看最多打开文件数(系统最多打开文件个数)

ulimit -n 4096：修改默认设置最大打开文件个数为4096个(文件描述符)
----------------------------------------------------------------