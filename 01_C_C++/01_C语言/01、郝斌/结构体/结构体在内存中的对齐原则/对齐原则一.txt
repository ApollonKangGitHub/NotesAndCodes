原则一：结构体中元素是按照定义顺序一个一个放到内存中去的，但并不是紧密排列的。从结构体存储的首地址开始，每一个元素放置到内存中时，它都会认为内存是以它自己的大小来划分的，因此元素放置的位置一定会在自己宽度的整数倍上开始（以结构体变量首地址为0计算）。

比如：
struct A
{
	char a;
	char b;
	char c;
	double z;
}；

和
struct B
{
	char a;
	char b;
	char c;
	char d;
	char e;
	char f;
	double z;
}；
所占内存一样多。只要double定义前面的char类型元素不多于八个，所占内存都一样大。