/*
	2016年8月6日13:35:44
*/
# include <iostream>
using namespace std;
int main (void)
{
	int * p = new int;//申请得到一块新的内存给p
	* p = 25;//通过p对这块内存进行处理操作
	cout << *p << endl;
	delete p;//释放分配的空间
	cout << *p << endl;//p指向堆内存释放后(被回收)，p仍指向原来那块内存，输出该地址指向的内存值却不是原有的值。
				   	  //因为系统会将原有信息删除后(却不会屏蔽原有指针所有的权限)，随即在该内存中放一个值以示该内存已不属于任何指针
	                  //但是指针p仍可以对该块内存进行一些操作，只是系统不承认更不知道，所以当系统将该块内存重新分配出去后
					  //p的存在以及它不被系统屏蔽的部分权限使得出现安全隐患
	p = 0;//令p指向0地址，消除安全隐患

	p = new int;//下一行要用到*p，则本行必须重新申请内存
	* p = 36;
	cout << *p << endl;
	delete p;
	cout << *p << endl;
	p = 0;
	
	return 0;
}