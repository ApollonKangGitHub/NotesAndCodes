	一个派生类对象在创建时首先会调用基类的构造函数，然后调用派生类的构造函数，一般情况下，在使用虚函数的时候，我们都会将派生类的对象传递给指向基类的指针（如：father * p = new son;或者son a; father * p = &a）,那么假如指向派生类对象的指针被删除时会发生什么情况呢？？
	如果析构函数是虚函数，那么就会正常操作，它会先调用派生类的析构函数，由于一般情况下任何类的析构函数都可声明为虚析构函数，当指针被删除时，系统会获得对象运行时的类型并调用正确的析构函数。但是需要注意三点：
・由于析构函数无参数，因此不能实现重载，自然一个类只能有一个虚析构函数；
・只要基类的析构函数被说明为虚函数，那么派生类的析构函数无论说明与否都自然成为虚函数；
・在C++中虚构造函数是不存在的，因此也无法声明