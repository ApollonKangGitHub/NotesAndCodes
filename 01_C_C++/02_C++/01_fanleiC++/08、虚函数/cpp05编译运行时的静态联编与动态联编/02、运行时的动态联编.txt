・运行时动态联编函数是根据指针的接收对象的类型来确定的
如
对象为A a和B b，函数为get()。（A和B不同的类，B为A的派生类，将get()函数说明为virtual）时：
A * p;
p->get();//调用A的get()函数
p = new B;//运行时重新“绑定”
p->getch();//调用B的get()函数

B * q;
q->getch();//调用B的get()函数
q = new A;//运行时重新“绑定”
q->getch();//调用A的get()函数

虽然p指针为A*类型，若之后（即运行时）p有赋新的地址（如：p = new B;），p指针就会指向类B的对象，联编的get()函数会为类B的get()函数
q与p是类似的

・假如在虚函数中没有采用指针或者引用，就无法实现动态联编。使用按值传参（传递的是对象），就一定是静态联编
所以动态联编有两个必要条件：
	>>虚函数声明
	>>使用指针或引用