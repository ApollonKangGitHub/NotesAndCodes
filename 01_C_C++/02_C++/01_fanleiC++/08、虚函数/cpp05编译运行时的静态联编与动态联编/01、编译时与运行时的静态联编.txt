编译时静态联编与运行时静态联编是一样的，运行的都是默认的联编函数。

・编译时的静态联编函数根据对象来确定，
eg：
对象为A a和B b，函数为get()。（A和B不同的类，B为A的派生类）
>（get()函数没有说明为virtual）
那么a.get()联编的就是a对象对应的类A的get()函数
b.get()联编的就是b对象对应的类B的get()函数
>（get()函数说明为virtual）
那么a.get()联编的就是a对象对应的类A的get()函数
b.get()联编的也是类A的get()函数（因为A是基类，且基类的get()函数已经声明为virtual即虚函数）

・而运行时静态联编函数是根据指针的类型来确定的
如A * p;
p->get();//调用A的get()函数
p = new B;
p->getch();//调用A的get()函数

B * q;
q->getch();//调用B的get()函数
q = new A;
q->getch();//调用B的get()函数

p指针为A*类型，无论之后p有没有赋新的地址（如：p = new B;），p指针联编的get()函数都是类A的get()函数
q指针为B*类型，无论之后p有没有赋新的地址（如：q = new A;），q指针联编的get()函数都是类B的get()函数