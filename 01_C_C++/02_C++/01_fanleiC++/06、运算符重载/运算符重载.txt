一、C++大部分运算符可以被重载，但是有一部分不能被重载：

“.”		成员访问运算符
“*”		指针访问运算符
“::”		作用域限定运算符
“? ：”	条件运算符
“#”		为预处理标志，不是运算符
“sizeof”	长度运算符

前两个运算符不能重载是为了保证访问成员的功能不能被改变，域运算符和sizeof 运算符的运算对象是类型而不是变量或一般表达式，不具备重载的特征。

二、运算符重载原则：
1.重载不能改变该运算符用于内置类型时的函义，程序员不能改变运算符+用于两个int型时的含义。
2. 运算符函数的参数至少有一个必须是类的对象或者类的对象的引用。这种规定可以防止程序员运用运算符改变内置类型的函义。
3.重载不能改变运算符的优先级。
4.重载不能改变运算符的结合律。
5.重载不能改变运算符操作数的个数。

三、C++允许重载的运算符：
双目算术运算符 		+ (加)、-(减)、*(乘)、/(除)、% (取模)
关系运算符 		==(等于)、!= (不等于)、< (小于)、> (大于）、<=(小于等于)、>=(大于等于)
逻辑运算符 		||(逻辑或)，&&(逻辑与)，!(逻辑非)
单目运算符 		+ (正)、-(负)、*(指针)、&(取地址)
自增自减运算符 		++(自增)、--(自减)
位运算符 		| (按位或)、& (按位与)、~(按位取反)、^(按位异或)、<< (左移)、>>(右移)
赋值运算符 		= 、 += 、 -= 、 *= 、 /= 、 % = 、 &= 、 |= 、 ^= 、 <<= 、 >>=
空间申请与释放 		new, delete, new[ ] , delete[]
其他运算符 		()(函数调用)、->(成员访问)、->*(成员指针访问)、,(逗号)、[](下标)