/*
	2016年8月9日14:56:40
	传地址与返回地址不需要构造副本，减小了空间的浪费与执行效率的低下问题
*/
# include <iostream>
using namespace std;

class A
{
public:
	A(){cout << "执行构造函数构造一个对象。\n";}//构造函数
	A(A&){cout << "执行复制构造函数，创建该对象的一个副本。\n";}//复制构造函数
	~A(){cout << "执行析构函数。\n";}//析构函数
};
/*
A func (A * one)		
{
	return  * one;		//返回的仍然是按值返回，还会调用一次赋值构造函数，相应的会调用一次析构函数
}
*/
A * func (A * one)	
{
	return  one;	//而当返回值是地址时，不需要调用赋值构造函数，析构函数也不用再调用（第二对复制构造函数与析构函数取消）
}
int main (void)
{
	A a;			
	func(&a);		//传递的是地址，则不用调用赋值构造函数，析构函数也不用再调用（第一对复制构造函数与析构函数取消）
				
	return 0;
					
}
/*
	运行结果：

		执行构造函数构造一个对象。
		执行析构函数。
		Press any key to continue

*/