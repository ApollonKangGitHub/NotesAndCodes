/*
2016年8月9日14:45:55
	按值传递对象
	按值传递对象会创建许多副本（临时对象），当变量越多副本越多，会占用大量内存空间
	创建的副本越多，执行析构函数的次数也就越多
	不仅耗内存，而且耗时间。系统开销会非常大
*/
# include <iostream>
using namespace std;

class A
{
public:
	A(){cout << "执行构造函数构造一个对象。\n";}//构造函数
	A(A&){cout << "执行复制构造函数，创建该对象的一个副本。\n";}//复制构造函数
	~A(){cout << "执行析构函数。\n";}//析构函数
};
A func (A one)		//⑤func()函数执行完毕，拷贝的临时对象one也被释放，调用析构函数
{
	return one;		//③按值返回，调用复制构造函数，创建返回值副本
}
int main (void)
{
	A a;			//①定义一个对象，调用构造函数
	func(a);		//②按值传递参数，调用复制构造函数，创建参数副本
					//④func()函数执行完毕后返回值没有被接收，释放创建的临时对象（即return one时由复制构造函数创建的副本对象），调用析构函数
	return 0;
					//⑥main()函数执行完毕，释放对象a的空间，调用析构函数
}
/*
	运行结果：

		执行构造函数构造一个对象。
		执行复制构造函数，创建该对象的一个副本。
		执行复制构造函数，创建该对象的一个副本。
		执行析构函数。
		执行析构函数。
		执行析构函数。
		Press any key to continue
*/