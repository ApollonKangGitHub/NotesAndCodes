1、C的权限限制const不够彻底，C++则比较严格。
eg,在C中：
const int i = 10;int * p = &i;*p = 100;//可以修改i的值

而在C++中以上方法是不能编译通过与修改的：
const int * p = &i;//*p必须与i对应，都是const
*p = 100;//不能修改成功

2、C的枚举、结构体定义变量时需要带enum、struct等关键字，否则必须typedef重命名。而C++不需要加关键字，只需要用自定义结构的结构名定义/声明。

3、C的枚举变量可以赋值为非枚举的值，而C++只能讲枚举变量赋值为枚举的值。

4、C中表达式不能作为左值，而C++中表达式可以作为左值，左值即被赋值的一方。
eg:
int a, b = 10, c = 10, d = 10;
(a = b) = 100;
(c != d?c:d) = 200;
该赋值方法在C中编译失败，而在C++中，输出结果为a=100，b=10，c=10， d=200。因为C++中“=”被重载过。
----------------------------------------------------------------------------------------------
C++中比C中多了两种类型：bool和string(string算作类，bool算作枚举)
C++中尽量不要用指针、不要用强转、不要用字符数组

cin、cout为输入输出流对象
>>、<<重载后为流输入运算符

cin、cout的流向是从前到后，eg:cout<<"i="<<10<<endl;/*i=字符串先流入标准输出、10再流入标准输出、endl再流到标准输出*/

由于C的scanf()、gets()、fgets()、C++的cin都不安全(越界)，
而string比较安全，eg：string name;cout<<name.max_size()<<endl;可以测试string最大能输入的字符个数。
