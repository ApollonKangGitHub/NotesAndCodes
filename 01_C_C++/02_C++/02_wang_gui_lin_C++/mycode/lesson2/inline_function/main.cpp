/*
 *分析普通函数、宏函数、内联函数三者的优缺点：
 * ①宏函数：浪费空间，减小时间
 * 优点：内嵌代码，避免压栈与出栈的开销
 * 缺点：简单的代码替换，易使生成text体积增大，易产生逻辑错误、歧义，并不会进行类型检查
 * ②普通函数：浪费时间，换取空间
 * 优点：高度抽象，避免重复开发，并对于某一调用函数的体积不会变大
 * 缺点：函数调用的压栈与出栈，带来开销
 * ③内联函数：像宏函数一样会内嵌，即使设置了inline，但是如果代码过长，系统自动忽略inline设置
 * 适用：目标函数被频繁调用且，函数体较小
 * 优点：函数体积较小(5行左右)时，避免大量开销，令目标代码更加高效
 * 缺点：滥用内联函数会导致程序变慢
*/
#include <iostream>

using namespace std;

/*宏函数*/
#define RGB(r,g,b) (((r & 0XFF) << 2) * ((g & 0XFF) << 1) * (b & 0XFF))
/*普通函数*/
int rgb(int &r, int &g, int &b){
    return ( ((r & 0XFF) << 2) * ((g & 0XFF) << 1) * (b & 0XFF) );
}
int main()
{
    int x=1, y=4, z=16;
    int l=2, m=8, n=32;

    cout<<"result="<<RGB(x,y,z)<<endl;
    cout<<"result="<<rgb(l,m,n)<<endl;
    return 0;
}

