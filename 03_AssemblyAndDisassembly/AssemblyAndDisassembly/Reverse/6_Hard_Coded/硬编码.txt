每一条指令最少1个字节，最多15个字节。

//一、经典定长指令:修改通用寄存器(操作码定长+操作数定长)：     
======================push八个通用寄存器=======================
50	//push eax                                                 
51	//push ecx                                                 
52	//push edx                                                 
53	//push ebx                                                 
54	//push esp                                                 
55	//push ebp                                                 
56	//push esi                                                 
57	//push edi                                                 
======================pop八个通用寄存器========================
58	//pop eax
... //
5F	//pop edi

=============================inc自加===========================
40	//inc eax
... //
47	//inc edi
============================dec自减============================
48	//dec	eax
... //
4F  //dec	edi
============================XCHG交换===========================
90	//NOP	(等价于XCHG EAX,EAX)
91	//XCHG EAX,ECX
... //
97	//XCHG EAX,EDI
===========================mov reg,imm=========================
B0 XX	//mov al,XX
...     //
B3 XX 	//mov bl,XX
B4 XX 	//mov ah,XX
...     //
B7 XX 	//mov bh,XX
B8 XXXXXXXX		//mov eax,XXXXXXXX
...	            //
BF XXXXXXXX		//mov edi,XXXXXXXX
===============================================================
//二、经典定长指令:修改EIP，"跳转地址=当前指令地址+当前指令长度+imm"
//Ib == imm byte; Iw == imm word; Id == imm dword; Ap == 六字节长度的直接地址
//另外注意：硬编码后面立即数的大小端可能是大端可能是小端
=============================jmp short=========================
//1、近距离JCC跳转
条件跳转：后面跟一个立即数的偏移，因此指令共两个字节
立即数是有符号的：最高位为0(7F)向下跳，最高位为1(80)向上跳
70	<--> JO(O标志位为1跳转)
71	<--> JNO
72	<--> JB/JNAE/JC
73	<--> JNB/JAE/JNC
74	<--> JZ/JE
75	<--> JNZ/JNE
76	<--> JBE/JNA
77	<--> JNBE/JA
78	<--> JS
79	<--> JNS
7A	<--> JP/JPE
7B	<--> JNP/JPO
7C	<--> JL/JNGE
7D	<--> JNL/JGE
7E	<--> JLE/JNG
7F	<--> JNLE/JG
=============================jmp far=========================
//2、远距离JCC跳转
后面跟一个四字节的立即数，共6字节。立即数以7FFFFFFF、80000000为界
0F80~0F8F	和70~7F一样只不过立即数字节数不同
===============================================================
//3、其它跳转指令:
E0	//loopne/loopnz Ib,inc ecx	(ZF=0 && ECX != 0)
E1	//loope/loopz Ib,inc ecx	(ZF=1 && ECX != 0) 
E2  //loop Ib,inc ecx	(满足ECX != 0就跳转)
E3  //jecxz/jrcxz Ib	(满足ECX=0跳转)

E8  //call Id
E9  //jmp Id

8个段寄存器：ES、CS、SS、DS、FS、GS、LDTR、TR(顺序固定)，不再用段寄存器寻址而做权限控制。
段寄存器其实是个结构体，共96位，用汇编指令只能访问其中16位。
EA	//jmp Ap,jmp CS:Id	(前四个字节为跳转地址，后两个字节为段选择子.即高两字节赋给CS，低两字节赋给EIP)
EB	//jmp Ib

C3	//ret	(eip出栈)
C2	//ret Iw	(eip出栈后，栈顶esp = esp + Iw)

CB	//retf	(出栈8字节，低四字节赋给EIP，高四字节的低两字赋给CS)
CA	//retf Iw	(在CB的基础上再做一步esp = esp + Iw)