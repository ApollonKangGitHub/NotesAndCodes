;内中断(internal interrupt)
中断类型码共256种
①除法错误：0
②单步执行：1
③执行into指令：4
④执行int指令(int n)：n为字节型立即数，是提供给CPU的中断类型码
中断信息的处理程序就叫做中断处理程序。而中断类型码用来定位该类型的处理程序入口地址在中断向量表中的位置(下标定位法)
中断向量表，就是中断处理程序入口地址的列表。对于8086CPU，中断向量表存放在内存0000:0000~0000:03FF的1024个字节单元中。
一个表项(元素)占2个字，高地址字存放segment address，低地址存放offset address

;中断过程：CPU自动完成从中断类型码到找到中断向量并设置CS:IP的过程
①取得中断类型码N
②pushf
③set TF=0,IF=0
④push CS
⑤push IP
⑥(IP)=(4*N),(CS)=(4*N)+2p
其中②④⑤的作用是保存CPU现场，以便中断程序结束后恢复现场继续执行。

;中断处理程序与iret
中断处理程序与普通子程序相似，只不过中断处理程序用iret返回(interrupt return)
等价于：
pop IP
pop CS
popf
是恢复中断前CPU现场的过程。

;比如除法溢出的中断程序是打印"Divide overflow"(不同机器可能不一样)，这是操作系统已经设定好的中断程序。
;那么修改其打印的内容，只要按照上面的中断处理程序的方式写好程序，然后修改0号中断类型码的向量为自己写的程序地址即可4
;但是这个过程稍微麻烦一点：
我们要将自己的处理程序先放到内存中以备随时的中断。由于中断向量表的(0000:0200~0000:02FF)这256个字节是空的，
因为中断向量表真真实处理的中断事件是达不到256个(1024字节)的，所有这1024字节中的0000:0200~0000:02FF是空闲的
又由于该段空间属于中断向量表，操作系统和其他应用程序不会去占用，所以我们将自己的处理程序放到该段即可。
;程序基本步骤：
①编写字节的0号中断处理程序"do0"
②将"do0"的程序代码段放到0000:0200开始的地址中。
③将0000放到存放0号中断向量的高字型单元内存中(0000:0002)，将0200放到存放0号中断向量的低字型单元中(0000:0000)

;程序：
int0.asm

;=======================
在设置栈的时候存在特殊情况：
ss设置指令不响应任何中断信号，因为sp没设置ss就被中断，栈顶设置未完成。而中断程序调用前需要压栈，
ss:sp的设置出错会导致一系列错误，所以ss屏蔽了信号，在sp设置时才接触对信号的屏蔽。