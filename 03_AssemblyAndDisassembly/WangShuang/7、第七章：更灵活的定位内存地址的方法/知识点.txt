and指令：按位与
or指令：按位或
eg:
mov al,01011010B	AL=01011010B=5AH
mov ah,01011010B	AH=01011010B=5AH
and al,10100101B	10100101B=A5H		AL=00000000B=0H
or ah,10100101B		10100101B=A5H		AH=11111111B=FFH


写字符的方法(按单字节字符算):
db 49, 50, 51, 52, 53, 54, 55	;缺点：ASCII码不好记
db '1234567'	;用单引号直接引起来
mov al,'s'		;也可以，但是在Debug中不可以

几个重要的ASCII值：
0	30H	0011 0000	48	
1	31H	0011 0001	49	
A	41H	0100 0001	65	
a	61H	0110 0001	97	

ASCII码大小写转换问题：
方法一：
大-->小：
	mov al,'A'
	add al,32	;add al,20H
小-->大：
	mov al,'a'
	sub al,32	;sub al,20H
方法二：
大-->小：
	mov al,'A'
	or al,00100000B	;or al,20H
小-->大：
	mov al,'a'	
	and al,11011111B	;and al,0DFH
	
表示偏移量的另外一种方式：
[bx]、[bx+5]、[bx+10]、[bx+15]、[bx+20]...
0[bx]、5[bx]、10[bx]、15[bx]、20[bx]
[bx].0、[bx].5、[bx].10、[bx].15、[bx].20

保存临时变量可以用寄存器、数据段、栈段，但是选择栈段最优
并且写多层循环的时候内存循环设置CX之前需要保存外层循环的CX，
内层结束循环时需要还原外层循环的CX