int n
就相当于调用n号中断的中断例程，与call类似，略有不同：
int n的流程：

;获取中断号
;puhsf
;set IF=0 && set TF=0
;push CS
;push IP
;(IP)=(n*4),(CS)=(n*4+2)
;......执行中断例程
;调用iret中断处

;系统板的ROM中存放着一套程序，成为BIOS(Basic Input Output System)基本输出输出系统，BIOS中主要包含以下几部分内容：
(1)硬件系统检测和初始化程序；
(2)外部中断和内部中断的终端例程；
(3)用于对硬件设备进行I/O操作的中断例程；
(4)其他和硬件相关的中断例程。

;BIOS/DOS中断例程的安装过程：
(1)、开机后，CPU一经加电运作，置位功能将初始化(cs)=0FFFFH,(IP)=0，自动从FFFF:0单元开始执行程序指令。
FFFF:0处有一条跳转指令，CPU执行该指令后，跳转去执行BIOS中的硬件系统检测和初始化程序。
(2)、初始化程序将建立BIOS所支持的中断向量，即：将BIOS提供的中断例程的入口地址登记在中断向量表中。(不需要像DOS
中断例程那样装载终端例程后再登记入口地址，因为BIOS的程序已经被固化在ROM中，一直存在于内存中，只可读不可写)。
(3)、硬件检测系统和初始化完成以后，调用int 19H进行操作系统的引导。从此将计算机交由操作系统(一个更大的程序)控制，
那么BIOS当然属于BIOS中断例程，也是不可以修改的。
(4)、DOS启动后，除完成其他工作以外(启动初始化一系列系统软件)，还将它所提供的中断例程装入内存，并建立相应的中断向量。
我们再次看到BIOS与DOS中断例程的区别：BIOS只需要将中断例程的入口地址登记到向量表相应的位置，而DOS中断例程需要先将
DOS的终端例程装入内存，再将不同例程所在不同的内存的地址登记到向量表对应的位置。因为向量表、DOS的中断例程都存放在RAM中，
所以每次开机都需要重新装入内存并登记。

;中断例程的作用：
类似于函数库，根据不同寄存器参数来实现一些基本的功能操作
eg:
BIOS的int 10H中包含多个和屏幕输出相关的子程序。(BIOS_INT10H.asm)
DOS的int 21H中断例程其中包含了DOS提供给程序员在编程时调用的子程序
mov ax,4C00H
int 21H
的含义为ah=21表示调用第21号子程序，al=0表示返回值为0。(DOS_INT21H.asm)