int 9中断由BIOS提供
in al,60H
BIOS键盘缓冲区 15字节数据，高8位保存扫描码，低8位保存ASCII码。缓冲区为一个环形队列。
int 16例程的0号功能可以从键盘缓冲区中阻塞式读取数据，int 9H写一次缓冲区则队尾指针就后移一次

int 16H读取一次(0号功能读)则队头指针就后移一次。当队列尾空时，int 16H的0号功能去读，读取不到则阻塞等待。
但是我们有时候需要非阻塞式读取，因为不能说读取不到键盘输入程序就不执行了(有时候键盘输入只是影响当前状态，并不能停止当前状态)，
那么我们就需要用int 16H的1号功能非阻塞读取缓冲区，但是非阻塞读取时，即使数据已经读取走，缓冲区也不会发生变化(只负责读取不负责修改队列)
所以需要每次在处理读取到的内容的子程序中阻塞读取一次，将非阻塞读取但没有删除(移动队首指针)的数据清除，也就是将队头指针后移一次。
当键盘缓冲区是满的时候，再次写缓冲区蜂鸣器会发出提示声音。
无论是阻塞读取还是非阻塞读取，获取到的数据会存放到AX中，高八位存放扫描码，低八位存放对应的ASCII码。
;==================================================================================================
Oracle VM VirtualBox 安装使用教程：
http://www.cnblogs.com/kevin-boy/archive/2013/07/29/3223003.html

Oracle VM VirtualBox虚拟机的安装使用：
http://jingyan.baidu.com/article/4853e1e5223e351909f72635.html
;==================================================================================================
3.5英寸软盘分为上下两面，每个面有80个磁道，每个磁道又分为18个扇区，每个扇区的大小为512字节
2面*80磁道*18扇区*512Byte=1440KB≈1.44MB(=1.40625MB)
读取磁盘的时候，面好和磁道号从0开始，扇区号从1开始。
BIOS提供的int 13H中断例程为我们完成磁盘读写的细节处理，我们只需要给定参数即可：
;参数:
(ah)=int 13H的功能号，2表示读扇区，3表示写扇区
(al)=读取/写入的扇区数
(ch)=磁道号
(cl)=扇区号
(dh)=磁头号(每个扇面都有一个磁头，所以磁头号即扇面号)
(dl)=驱动器号(软驱从0开始，0:软驱A,1:软驱B,...,硬盘从80H开始,80H:硬盘C,81H:硬盘D,...)
es:bx指向与软盘进行数据交互(从其中读/写入其中)的内存区
;返回值:
成功：(ah)=0，(al)=读取/写入的扇区数
失败：(ah)=出错代码

注意：一定要保证驱动器号的正确，否则写错盘，可能导致的是致命性错误。
;eg:WriteSoftDisk.asm
;=================================================================================================
逻辑扇区号=(面号*80+磁道号)*18+扇区号-1
根据逻辑扇区号算出物理编号：
面号=int(逻辑扇区号/1440)					==>dh
磁道号=int(rem(逻辑扇区号/1440)/18)			==>ch
扇区号=rem(rem(逻辑扇区号/1440)/18)+1		==>cl
;==================================================================================================
C盘的0面0道1扇区：MBR主引导记录
但是由于DOSBOX以及XP的dos都是处于保护模式的，所以读取80H的硬盘驱动的0面0道1扇区是不能成功的
只有在纯DOS的实模式下才能成功。