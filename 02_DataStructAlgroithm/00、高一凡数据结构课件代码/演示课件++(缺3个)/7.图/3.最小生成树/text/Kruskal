void Kruskal(MGraph G)
{ 
  int set[MAX_VERTEX_NUM], senumber=0, sb, i, j, k;
  side se[MAX_VERTEX_NUM*(MAX_VERTEX_NUM-1)/2]; 
  for(i=0; i<G.vexnum; i++) 
    for(j=i+1; j<G.vexnum; j++) 
      if(G.arcs[i][j].adj<INFINITY) 
      {
        k=senumber-1; 
        while(k>=0) 
          if(se[k].weight>G.arcs[i][j].adj)
          { 
            se[k+1]=se[k]; 
            k--; 
          }
          else 
            break; 
        se[k+1].a=i; 
        se[k+1].b=j;
        se[k+1].weight=G.arcs[i][j].adj;
        senumber++; 
      }
  for(i=0; i<G.vexnum; i++) 
    set[i]=i; 
  j=0; 
  k=0; 
  while(k<G.vexnum-1) 
  {
    if(set[se[j].a]!=set[se[j].b]) 
    {
      sb=set[se[j].b]; 
      for(i=0; i<G.vexnum; i++) 
        if(set[i]==sb) 
          set[i]=set[se[j].a]; 
      k++; 
    }
    j++; 
  }
}

