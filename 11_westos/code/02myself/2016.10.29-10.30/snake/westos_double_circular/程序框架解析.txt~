
	贪吃蛇游戏基本功能实现：使用双向循环链表构建。
	
	结构体：
	蛇与蛋的组成都是一个有WIDTH*WIDTH个像素点的方块，它们的结构体相同为SNAKE。
	有四个成员：头指针、尾指针、产生的方块左上方像素点的坐标（横坐标、纵坐标）
	
	基本思路：
		组成蛇的节点是双向链表的节点，初始化蛇、返回指向蛇头的指针pHead，通过该指针调用颜色填充函数将蛇填充颜色；
		蛋通过随机数产生函数来随机生成，蛋无前驱后继。返回指向蛋的指针pNewEgg，同样将该指针传递给颜色填充函数，为蛋上色；
		蛇每移动一次，刷新一次屏幕，然后通过保存的头指针将蛇和蛋重新画一遍；
		如果蛇头节点坐标与蛋节点坐标不相遇，则蛋只需通过保存的已经产生的pNewEgg在屏幕刷新后重新填色，无需（不能）重新随机产生；
		若蛇头与蛋相遇，则在组成蛇的链表上增加一个节点，刷新屏幕，并且在刷新屏幕以后，随机产生节点返回给pNewEgg，更新pNewEgg的值。
		如此死循环执行，只要满足GAME OVER的条件就跳出循环，游戏结束。

	未实现功能：
		产生的食物（蛋）不能在蛇身上
	已实现主体功能：
		1、蛇的初始化（有三个节点，头、身、尾）、蛋的随机产生
		2、游戏边框、蛇以及蛋颜色的填充
		3、蛇的移动功能（上移、下移、左移、右移）
		4、保证蛇在移动时，按移动方向的反方向键无效
		5、蛇每吃一次蛋，构成蛇的链表就增加一个节点
		6、GAME OVER判定：蛇头碰到墙壁或者碰到自身都视为游戏结束




